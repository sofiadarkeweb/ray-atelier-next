{"ast":null,"code":"/**\n * useScroll React custom hook\n * Usage:\n *    const { scrollX, scrollY, scrollDirection } = useScroll();\n */\nimport { useState, useEffect } from \"react\";\nexport function useScroll() {\n  // storing this to get the scroll direction\n  const {\n    0: lastScrollTop,\n    1: setLastScrollTop\n  } = useState(0); // the offset of the document.body\n\n  const {\n    0: bodyOffset,\n    1: setBodyOffset\n  } = useState(document.body.getBoundingClientRect()); // the vertical direction\n\n  const {\n    0: scrollY,\n    1: setScrollY\n  } = useState(bodyOffset.top); // the horizontal direction\n\n  const {\n    0: scrollX,\n    1: setScrollX\n  } = useState(bodyOffset.left); // scroll direction would be either up or down\n\n  const {\n    0: scrollDirection,\n    1: setScrollDirection\n  } = useState();\n\n  const listener = e => {\n    setBodyOffset(document.body.getBoundingClientRect());\n    setScrollY(-bodyOffset.top);\n    setScrollX(bodyOffset.left);\n    setScrollDirection(lastScrollTop > -bodyOffset.top ? \"down\" : \"up\");\n    setLastScrollTop(-bodyOffset.top);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", listener);\n    return () => {\n      window.removeEventListener(\"scroll\", listener);\n    };\n  });\n  return {\n    scrollY,\n    scrollX,\n    scrollDirection\n  };\n}","map":{"version":3,"sources":["/Users/sofiadarke/Dropbox/Hyper Island/09 individual project/Ray/ray-atelier-next/components/UseScroll.js"],"names":["useState","useEffect","useScroll","lastScrollTop","setLastScrollTop","bodyOffset","setBodyOffset","document","body","getBoundingClientRect","scrollY","setScrollY","top","scrollX","setScrollX","left","scrollDirection","setScrollDirection","listener","e","window","addEventListener","removeEventListener"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC3B;AACA,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCJ,QAAQ,CAAC,CAAD,CAAlD,CAF2B,CAG3B;;AACA,QAAM;AAAA,OAACK,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAC3CO,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAD2C,CAA5C,CAJ2B,CAO3B;;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAACK,UAAU,CAACO,GAAZ,CAAtC,CAR2B,CAS3B;;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAACK,UAAU,CAACU,IAAZ,CAAtC,CAV2B,CAW3B;;AACA,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCjB,QAAQ,EAAtD;;AAEA,QAAMkB,QAAQ,GAAIC,CAAD,IAAO;AACvBb,IAAAA,aAAa,CAACC,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAAD,CAAb;AACAE,IAAAA,UAAU,CAAC,CAACN,UAAU,CAACO,GAAb,CAAV;AACAE,IAAAA,UAAU,CAACT,UAAU,CAACU,IAAZ,CAAV;AACAE,IAAAA,kBAAkB,CAACd,aAAa,GAAG,CAACE,UAAU,CAACO,GAA5B,GAAkC,MAAlC,GAA2C,IAA5C,CAAlB;AACAR,IAAAA,gBAAgB,CAAC,CAACC,UAAU,CAACO,GAAb,CAAhB;AACA,GAND;;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AACA,WAAO,MAAM;AACZE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC;AACA,KAFD;AAGA,GALQ,CAAT;AAOA,SAAO;AACNR,IAAAA,OADM;AAENG,IAAAA,OAFM;AAGNG,IAAAA;AAHM,GAAP;AAKA","sourcesContent":["/**\n * useScroll React custom hook\n * Usage:\n *    const { scrollX, scrollY, scrollDirection } = useScroll();\n */\n\nimport { useState, useEffect } from \"react\";\n\nexport function useScroll() {\n\t// storing this to get the scroll direction\n\tconst [lastScrollTop, setLastScrollTop] = useState(0);\n\t// the offset of the document.body\n\tconst [bodyOffset, setBodyOffset] = useState(\n\t\tdocument.body.getBoundingClientRect()\n\t);\n\t// the vertical direction\n\tconst [scrollY, setScrollY] = useState(bodyOffset.top);\n\t// the horizontal direction\n\tconst [scrollX, setScrollX] = useState(bodyOffset.left);\n\t// scroll direction would be either up or down\n\tconst [scrollDirection, setScrollDirection] = useState();\n\n\tconst listener = (e) => {\n\t\tsetBodyOffset(document.body.getBoundingClientRect());\n\t\tsetScrollY(-bodyOffset.top);\n\t\tsetScrollX(bodyOffset.left);\n\t\tsetScrollDirection(lastScrollTop > -bodyOffset.top ? \"down\" : \"up\");\n\t\tsetLastScrollTop(-bodyOffset.top);\n\t};\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"scroll\", listener);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"scroll\", listener);\n\t\t};\n\t});\n\n\treturn {\n\t\tscrollY,\n\t\tscrollX,\n\t\tscrollDirection,\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}