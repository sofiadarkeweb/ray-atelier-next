{"ast":null,"code":"var _s = $RefreshSig$();\n\n/**\n * useScroll React custom hook\n * Usage:\n *    const { scrollX, scrollY, scrollDirection } = useScroll();\n */\nimport { useState, useEffect } from \"react\";\nexport function useScroll() {\n  _s();\n\n  // storing this to get the scroll direction\n  var _useState = useState(0),\n      lastScrollTop = _useState[0],\n      setLastScrollTop = _useState[1]; // the offset of the document.body\n\n\n  var _useState2 = useState(document.body.getBoundingClientRect()),\n      bodyOffset = _useState2[0],\n      setBodyOffset = _useState2[1]; // the vertical direction\n\n\n  var _useState3 = useState(bodyOffset.top),\n      scrollY = _useState3[0],\n      setScrollY = _useState3[1]; // the horizontal direction\n\n\n  var _useState4 = useState(bodyOffset.left),\n      scrollX = _useState4[0],\n      setScrollX = _useState4[1]; // scroll direction would be either up or down\n\n\n  var _useState5 = useState(),\n      scrollDirection = _useState5[0],\n      setScrollDirection = _useState5[1];\n\n  var listener = function listener(e) {\n    setBodyOffset(document.body.getBoundingClientRect());\n    setScrollY(-bodyOffset.top);\n    setScrollX(bodyOffset.left);\n    setScrollDirection(lastScrollTop > -bodyOffset.top ? \"down\" : \"up\");\n    setLastScrollTop(-bodyOffset.top);\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", listener);\n    return function () {\n      window.removeEventListener(\"scroll\", listener);\n    };\n  });\n  return {\n    scrollY: scrollY,\n    scrollX: scrollX,\n    scrollDirection: scrollDirection\n  };\n}\n\n_s(useScroll, \"qDCHlaJ7FHwvXPx1E5gOscluL4w=\");","map":{"version":3,"sources":["/Users/sofiadarke/Dropbox/Hyper Island/09 individual project/Ray/ray-atelier-next/components/UseScroll.js"],"names":["useState","useEffect","useScroll","lastScrollTop","setLastScrollTop","document","body","getBoundingClientRect","bodyOffset","setBodyOffset","top","scrollY","setScrollY","left","scrollX","setScrollX","scrollDirection","setScrollDirection","listener","e","window","addEventListener","removeEventListener"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAC3B;AAD2B,kBAEeF,QAAQ,CAAC,CAAD,CAFvB;AAAA,MAEpBG,aAFoB;AAAA,MAELC,gBAFK,iBAG3B;;;AAH2B,mBAISJ,QAAQ,CAC3CK,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAD2C,CAJjB;AAAA,MAIpBC,UAJoB;AAAA,MAIRC,aAJQ,kBAO3B;;;AAP2B,mBAQGT,QAAQ,CAACQ,UAAU,CAACE,GAAZ,CARX;AAAA,MAQpBC,OARoB;AAAA,MAQXC,UARW,kBAS3B;;;AAT2B,mBAUGZ,QAAQ,CAACQ,UAAU,CAACK,IAAZ,CAVX;AAAA,MAUpBC,OAVoB;AAAA,MAUXC,UAVW,kBAW3B;;;AAX2B,mBAYmBf,QAAQ,EAZ3B;AAAA,MAYpBgB,eAZoB;AAAA,MAYHC,kBAZG;;AAc3B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACvBV,IAAAA,aAAa,CAACJ,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAAD,CAAb;AACAK,IAAAA,UAAU,CAAC,CAACJ,UAAU,CAACE,GAAb,CAAV;AACAK,IAAAA,UAAU,CAACP,UAAU,CAACK,IAAZ,CAAV;AACAI,IAAAA,kBAAkB,CAACd,aAAa,GAAG,CAACK,UAAU,CAACE,GAA5B,GAAkC,MAAlC,GAA2C,IAA5C,CAAlB;AACAN,IAAAA,gBAAgB,CAAC,CAACI,UAAU,CAACE,GAAb,CAAhB;AACA,GAND;;AAQAT,EAAAA,SAAS,CAAC,YAAM;AACfmB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AACA,WAAO,YAAM;AACZE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC;AACA,KAFD;AAGA,GALQ,CAAT;AAOA,SAAO;AACNP,IAAAA,OAAO,EAAPA,OADM;AAENG,IAAAA,OAAO,EAAPA,OAFM;AAGNE,IAAAA,eAAe,EAAfA;AAHM,GAAP;AAKA;;GAlCed,S","sourcesContent":["/**\n * useScroll React custom hook\n * Usage:\n *    const { scrollX, scrollY, scrollDirection } = useScroll();\n */\n\nimport { useState, useEffect } from \"react\";\n\nexport function useScroll() {\n\t// storing this to get the scroll direction\n\tconst [lastScrollTop, setLastScrollTop] = useState(0);\n\t// the offset of the document.body\n\tconst [bodyOffset, setBodyOffset] = useState(\n\t\tdocument.body.getBoundingClientRect()\n\t);\n\t// the vertical direction\n\tconst [scrollY, setScrollY] = useState(bodyOffset.top);\n\t// the horizontal direction\n\tconst [scrollX, setScrollX] = useState(bodyOffset.left);\n\t// scroll direction would be either up or down\n\tconst [scrollDirection, setScrollDirection] = useState();\n\n\tconst listener = (e) => {\n\t\tsetBodyOffset(document.body.getBoundingClientRect());\n\t\tsetScrollY(-bodyOffset.top);\n\t\tsetScrollX(bodyOffset.left);\n\t\tsetScrollDirection(lastScrollTop > -bodyOffset.top ? \"down\" : \"up\");\n\t\tsetLastScrollTop(-bodyOffset.top);\n\t};\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"scroll\", listener);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"scroll\", listener);\n\t\t};\n\t});\n\n\treturn {\n\t\tscrollY,\n\t\tscrollX,\n\t\tscrollDirection,\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}