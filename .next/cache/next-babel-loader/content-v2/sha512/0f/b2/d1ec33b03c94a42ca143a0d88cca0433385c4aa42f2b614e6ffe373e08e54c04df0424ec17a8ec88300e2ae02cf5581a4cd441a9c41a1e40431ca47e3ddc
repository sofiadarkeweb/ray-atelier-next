{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sofiadarke/Dropbox/Hyper Island/09 individual project/Ray/ray-atelier-next/pages/projects/[slug].js\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport Masonry from \"react-masonry-css\";\n// how to output several images in different formats?\nexport var __N_SSG = true;\nexport default function ProjectDetails(_ref) {\n  var _this = this;\n\n  var portfolioProject = _ref.portfolioProject;\n  var breakpointColumnsObj = {\n    \"default\": 2,\n    500: 1\n  };\n  var _portfolioProject$fie = portfolioProject.fields,\n      projectTitle = _portfolioProject$fie.projectTitle,\n      description = _portfolioProject$fie.description,\n      year = _portfolioProject$fie.year,\n      featuredImage = _portfolioProject$fie.featuredImage,\n      projectImages = _portfolioProject$fie.projectImages,\n      slug = _portfolioProject$fie.slug,\n      linkNext = _portfolioProject$fie.linkNext;\n  console.log({\n    portfolioProject: portfolioProject\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feat-img\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: \"https:\" + featuredImage.fields.file.url,\n        width: featuredImage.fields.file.details.image.width,\n        height: featuredImage.fields.file.details.image.height,\n        objectFit: \"contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: projectTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: projectImages && projectImages.map(function (img) {\n        return (\n          /*#__PURE__*/\n          // const isPORTRAIT 0=img.width greate than img.height. use reduce, to rearrange the order. is this a portrai image, find next portrait\n          _jsxDEV(\"div\", {\n            className: \"masonry-img\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: \"https:\" + img.fields.file.url,\n              width: img.fields.file.details.image.width,\n              height: img.fields.file.details.image.height\n            }, img.sys.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"caption\",\n              children: img.fields.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, _this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: linkNext.fields.slug,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Next project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n}\n_c = ProjectDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDetails\");","map":{"version":3,"sources":["/Users/sofiadarke/Dropbox/Hyper Island/09 individual project/Ray/ray-atelier-next/pages/projects/[slug].js"],"names":["Image","Link","Masonry","ProjectDetails","portfolioProject","breakpointColumnsObj","fields","projectTitle","description","year","featuredImage","projectImages","slug","linkNext","console","log","file","url","details","image","width","height","map","img","sys","id"],"mappings":"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","sourcesContent":["import { createClient } from \"contentful\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport Masonry from \"react-masonry-css\";\n\nconst client = createClient({\n\tspace: process.env.CONTENFUL_SPACE_ID,\n\taccessToken: process.env.CONTENFUL_ACCESS_KEY,\n});\n\nexport const getStaticPaths = async () => {\n\tconst res = await client.getEntries({\n\t\tcontent_type: \"portfolioProject\",\n\t});\n\tconst paths = res.items.map((item) => {\n\t\t//why items?\n\t\treturn {\n\t\t\tparams: { slug: item.fields.slug },\n\t\t};\n\t});\n\n\t// paths: paths can be shortened to just path, because its the same\n\treturn {\n\t\tpaths,\n\t\tfallback: false,\n\t};\n};\n\nexport async function getStaticProps({ params }) {\n\tconst { items } = await client.getEntries({\n\t\t//intead of all res, get items\n\t\tcontent_type: \"portfolioProject\",\n\t\t\"fields.slug\": params.slug,\n\t});\n\n\treturn {\n\t\tprops: { portfolioProject: items[0] },\n\t};\n}\n\n// how to output several images in different formats?\nexport default function ProjectDetails({ portfolioProject }) {\n\tconst breakpointColumnsObj = {\n\t\tdefault: 2,\n\t\t500: 1,\n\t};\n\n\tconst {\n\t\tprojectTitle,\n\t\tdescription,\n\t\tyear,\n\t\tfeaturedImage,\n\t\tprojectImages,\n\t\tslug,\n\t\tlinkNext,\n\t} = portfolioProject.fields;\n\n\tconsole.log({ portfolioProject });\n\n\treturn (\n\t\t<div className=\"project-page\">\n\t\t\t<div className=\"feat-img\">\n\t\t\t\t<Image\n\t\t\t\t\tsrc={\"https:\" + featuredImage.fields.file.url}\n\t\t\t\t\twidth={featuredImage.fields.file.details.image.width}\n\t\t\t\t\theight={featuredImage.fields.file.details.image.height}\n\t\t\t\t\tobjectFit=\"contain\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"project-content\">\n\t\t\t\t<p>{year}</p>\n\t\t\t\t<h2>{projectTitle}</h2>\n\t\t\t\t<p>{description}</p>\n\t\t\t</div>\n\t\t\t{/* <Image\n\t\t\t\tsrc={\"https:\" + projectImages[0].fields.file.url}\n\t\t\t\twidth={projectImages[0].fields.file.details.image.width}\n\t\t\t\theight={projectImages[0].fields.file.details.image.height}\n\t\t\t/> */}\n\n\t\t\t<Masonry\n\t\t\t\tbreakpointCols={breakpointColumnsObj}\n\t\t\t\tclassName=\"my-masonry-grid\"\n\t\t\t\tcolumnClassName=\"my-masonry-grid_column\"\n\t\t\t>\n\t\t\t\t{projectImages &&\n\t\t\t\t\tprojectImages.map((img) => (\n\t\t\t\t\t\t// const isPORTRAIT 0=img.width greate than img.height. use reduce, to rearrange the order. is this a portrai image, find next portrait\n\t\t\t\t\t\t<div className=\"masonry-img\">\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tkey={img.sys.id}\n\t\t\t\t\t\t\t\tsrc={\"https:\" + img.fields.file.url}\n\t\t\t\t\t\t\t\twidth={img.fields.file.details.image.width}\n\t\t\t\t\t\t\t\theight={img.fields.file.details.image.height}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"caption\">{img.fields.description}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t</Masonry>\n\t\t\t<Link href={linkNext.fields.slug}>\n\t\t\t\t<a>Next project</a>\n\t\t\t</Link>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}