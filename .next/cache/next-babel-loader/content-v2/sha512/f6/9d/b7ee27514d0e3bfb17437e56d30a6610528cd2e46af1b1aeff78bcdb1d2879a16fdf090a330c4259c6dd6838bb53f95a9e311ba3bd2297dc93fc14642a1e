{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createClient } from \"contentful\";\nimport Image from \"next/image\";\nimport Masonry from \"react-masonry-css\";\nconst client = createClient({\n  space: process.env.CONTENFUL_SPACE_ID,\n  accessToken: process.env.CONTENFUL_ACCESS_KEY\n});\nexport const getStaticPaths = async () => {\n  const res = await client.getEntries({\n    content_type: \"portfolioProject\"\n  });\n  const paths = res.items.map(item => {\n    //why items?\n    return {\n      params: {\n        slug: item.fields.slug\n      }\n    };\n  }); // paths: paths can be shortened to just path, because its the same\n\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport async function getStaticProps({\n  params\n}) {\n  const {\n    items\n  } = await client.getEntries({\n    //intead of all res, get items\n    content_type: \"portfolioProject\",\n    \"fields.slug\": params.slug\n  });\n  return {\n    props: {\n      portfolioProject: items[0]\n    }\n  };\n} // how to output several images in different formats?\n\nexport default function ProjectDetails({\n  portfolioProject\n}) {\n  const breakpointColumnsObj = {\n    default: 2,\n    500: 1\n  };\n  const {\n    projectTitle,\n    description,\n    year,\n    featuredImage,\n    projectImages\n  } = portfolioProject.fields;\n  console.log(portfolioProject);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"project-page\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"feat-img\",\n      children: /*#__PURE__*/_jsx(Image, {\n        src: \"https:\" + featuredImage.fields.file.url,\n        width: featuredImage.fields.file.details.image.width,\n        height: featuredImage.fields.file.details.image.height,\n        objectFit: \"contain\"\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"project-content\",\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        children: year\n      }), /*#__PURE__*/_jsx(\"h2\", {\n        children: projectTitle\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: description\n      })]\n    }), /*#__PURE__*/_jsx(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: projectImages && projectImages.map(img =>\n      /*#__PURE__*/\n      // const isPORTRAIT 0=img.width greate than img.height. use reduce, to rearrange the order. is this a portrai image, find next portrait\n      _jsxs(\"div\", {\n        className: \"masonry-img\",\n        children: [/*#__PURE__*/_jsx(Image, {\n          src: \"https:\" + img.fields.file.url,\n          width: img.fields.file.details.image.width,\n          height: img.fields.file.details.image.height\n        }, img.sys.id), /*#__PURE__*/_jsx(\"span\", {\n          className: \"caption\",\n          children: img.fields.description\n        })]\n      }))\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}