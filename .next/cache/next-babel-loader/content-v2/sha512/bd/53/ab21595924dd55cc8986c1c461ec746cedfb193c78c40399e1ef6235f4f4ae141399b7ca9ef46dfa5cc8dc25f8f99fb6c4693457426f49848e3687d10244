{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport Masonry from \"react-masonry-css\";\n// how to output several images in different formats?\nexport var __N_SSG = true;\nexport default function ProjectDetails(_ref) {\n  var portfolioProject = _ref.portfolioProject;\n  var breakpointColumnsObj = {\n    \"default\": 2,\n    500: 1\n  };\n  var _portfolioProject$fie = portfolioProject.fields,\n      projectTitle = _portfolioProject$fie.projectTitle,\n      description = _portfolioProject$fie.description,\n      year = _portfolioProject$fie.year,\n      featuredImage = _portfolioProject$fie.featuredImage,\n      projectImages = _portfolioProject$fie.projectImages,\n      slug = _portfolioProject$fie.slug,\n      linkNext = _portfolioProject$fie.linkNext;\n  console.log({\n    portfolioProject: portfolioProject\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"project-page\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"feat-img\",\n      children: /*#__PURE__*/_jsx(Image, {\n        src: \"https:\" + featuredImage.fields.file.url,\n        width: featuredImage.fields.file.details.image.width,\n        height: featuredImage.fields.file.details.image.height,\n        objectFit: \"contain\"\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"project-content\",\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        children: year\n      }), /*#__PURE__*/_jsx(\"h2\", {\n        children: projectTitle\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: description\n      })]\n    }), /*#__PURE__*/_jsx(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: projectImages && projectImages.map(function (img) {\n        return (\n          /*#__PURE__*/\n          // const isPORTRAIT 0=img.width greate than img.height. use reduce, to rearrange the order. is this a portrai image, find next portrait\n          _jsxs(\"div\", {\n            className: \"masonry-img\",\n            children: [/*#__PURE__*/_jsx(Image, {\n              src: \"https:\" + img.fields.file.url,\n              width: img.fields.file.details.image.width,\n              height: img.fields.file.details.image.height // objectFit=\"contain\"\n\n            }, img.sys.id), /*#__PURE__*/_jsx(\"span\", {\n              className: \"caption\",\n              children: img.fields.description\n            })]\n          })\n        );\n      })\n    }), linkNext !== undefined && /*#__PURE__*/_jsx(Link, {\n      href: \"/projects/\" + linkNext.fields.slug,\n      children: /*#__PURE__*/_jsxs(\"a\", {\n        className: \"next-link\",\n        children: [\"Similar projects: \", linkNext.fields.projectTitle]\n      })\n    }, linkNext.sys.id)]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}